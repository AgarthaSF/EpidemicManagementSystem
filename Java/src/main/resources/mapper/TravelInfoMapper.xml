<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.agarthasf.epipre.mapper.TravelInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.agarthasf.epipre.pojo.TravelInfo">
        <id column="travel_id" property="travelId" />
        <result column="identity" property="identity" />
        <result column="city_name" property="cityName" />
        <result column="travel_date" property="travelDate" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        travel_id, identity, city_name, travel_date
    </sql>

    <resultMap id="SchoolTravelAnomaly" type="com.agarthasf.epipre.resp.TravelAnomalyResp">
        <result column="type" property="type" />
        <result column="identity" property="identity" />
        <result column="name" property="name" />
        <result column="phone_number" property="phoneNumber" />
        <result column="city_name" property="cityName" />
    </resultMap>

    <select id="getSchoolAnomaly" resultMap="SchoolTravelAnomaly">
        SELECT
            acc.type,
            ss.identity,
            ss.name,
            ss.phone_number,
            ce.city_name
        FROM
            travel_info AS ti
                NATURAL JOIN account AS acc
                NATURAL JOIN school_staff AS ss
                LEFT JOIN city_epidemic AS ce ON ti.city_name = ce.city_name
                LEFT JOIN area_epidemic AS ae ON ce.city_adcode = ae.belonging_city
        WHERE
            (ce.risk_level > 1
           OR ae.risk_level > 1)
            AND(ss.identity like concat("%", #{identity}, "%") or ss.name like concat("%", #{identity}, "%"))
        GROUP BY
            travel_id
    </select>


    <select id="getForeignAnomaly" resultMap="SchoolTravelAnomaly">
        SELECT
            acc.type,
            fs.identity,
            fs.NAME,
            fs.phone_number,
            ce.city_name
        FROM
            travel_info AS ti
                NATURAL JOIN account AS acc
                NATURAL JOIN foreign_staff AS fs
                LEFT JOIN city_epidemic AS ce ON ti.city_name = ce.city_name
                LEFT JOIN area_epidemic AS ae ON ce.city_adcode = ae.belonging_city
        WHERE
            (ce.risk_level > 1
           OR ae.risk_level > 1)
            AND(fs.identity like concat("%", #{identity}, "%") or fs.name like concat("%", #{identity}, "%"))
        GROUP BY
            travel_id
    </select>

</mapper>
